# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    tags:
      - 'patched.v*'
      
env:
  APP_NAME: 'GeneticsReborn-Patched'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Create artifact
      run: |
        assets="${{ env.APP_NAME }}_$(echo "${{ runner.os }}" | tr '[:upper:]' '[:lower:]')"
        mkdir -p "dist/$assets"
        cp -r build/libs/*patched.jar "dist/$assets/"
        (
          cd dist
          7z a "$assets.zip" "$assets"
          ls -lah *.*
        )
      shell: bash
    - uses: actions/upload-artifact@v2
      with:
        name: artifact-${{ matrix.os }}
        path: |
            dist/*.tar.gz
            dist/*.zip
  
  create-release:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v1
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body:  Release
          draft: false
          prerelase: false
          
      - name: Write upload_url to file
        run: echo '${{steps.create-release.outpts.upload_url }}' > upload_url.txt
        
      - uses: actions/upload-artifact@v2
        with:
          name: create-release
          path: upload_url.txt
          
  upload-release:
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        include:
          - os: windows-latest
            asset_name_suffix: windows.zip
            asset_content_type: application/zip
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact-${{ matrix.os }}
          
      - uses: actions/download-artifact@v2
        with:
          name: create-release
          
      - id: vars
        run: |
          echo "::set-output name=upload_url::$(cat upload_url.txt)"
          
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.vars.outputs.upload_url }}
          asset_path: ${{ env.APP_NAME }}_${{ matrix.asset_name_suffix }}
          asset_name: ${{ env.APP_NAME }}_${{ matrix.asset_name_suffix }}
          asset_content_type: ${{ matrix.asset_content_type }}
